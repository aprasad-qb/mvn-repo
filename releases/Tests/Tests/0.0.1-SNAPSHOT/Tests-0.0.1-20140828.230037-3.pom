<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>Tests</groupId>
	<artifactId>Tests</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>

		<!-- The main class -->
		<main.class>com.asp.TestTimeUUID</main.class>

		<!-- The Maven repo folder path -->
		<mvn.repo.dir>${project.build.directory}/../../mvn-repo</mvn.repo.dir>
		<mvn.repo.dir.releases>${mvn.repo.dir}/releases</mvn.repo.dir.releases>
		<mvn.repo.dir.snapshots>${mvn.repo.dir}/snapshots</mvn.repo.dir.snapshots>
		<mvn.repo.dir.uri>file://${mvn.repo.dir}</mvn.repo.dir.uri>
		<mvn.repo.dir.releases.uri>file://${mvn.repo.dir.releases}</mvn.repo.dir.releases.uri>
		<mvn.repo.dir.snapshots.uri>file://${mvn.repo.dir.snapshots}</mvn.repo.dir.snapshots.uri>
		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
		<github.global.server>github</github.global.server>
	</properties>

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>${mvn.repo.dir.releases.uri}</url>
		</repository>
		<snapshotRepository>
			<id>snapshot-repo</id>
			<url>${mvn.repo.dir.snapshots.uri}</url>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<plugins>
			<!-- Bind the maven-assembly-plugin to the package phase this will create 
				a jar file without the storm dependencies suitable for deployment to a cluster. -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>${main.class}</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>java</executable>
					<includeProjectDependencies>true</includeProjectDependencies>
					<includePluginDependencies>false</includePluginDependencies>
					<classpathScope>compile</classpathScope>
					<mainClass>${main.class}</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- Maven Deploy to GitHub -->
			<!-- http://malalanayake.wordpress.com/2014/03/10/create-simple-maven-repository-on-github/ -->
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::${mvn.repo.dir.releases.uri}</altDeploymentRepository>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.8</version>
				<configuration>
					<!-- git commit message -->
					<message>Maven artifacts for ${project.version}</message>
					<!-- disable webpage processing -->
					<noJekyll>true</noJekyll>
					<!-- matches distribution management repository url above -->
					<outputDirectory>${mvn.repo.dir.releases}</outputDirectory>
					<!-- remote branch name -->
<!-- 					<branch>refs/heads/master</branch> -->
					<!-- If you remove this then the old artifact will be removed and new 
						one will replace. But with the merge tag you can just release by changing 
						the version -->
					<merge>true</merge>
					<includes>
						<include>**/*</include>
					</includes>
					<!-- github repo name -->
<!-- 					<repositoryName>mvn-repo</repositoryName> -->
					<!-- github username -->
<!-- 					<repositoryOwner>aprasad-qb</repositoryOwner> -->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- Maven Deploy to GitHub -->
	<scm>
		<developerConnection>scm:git:git://github.com:aprasad-qb/mv-repo.git</developerConnection>
		<connection>scm:git:git://github.com/aprasad-qb/mv-repo.git</connection>
		<url>https://github.com/aprasad-qb/mv-repo</url>
	</scm>

	<dependencies>
		<!-- Datastax Cassandra client -->
		<!-- Need this separately. The bundled version clashes with JBoss. -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>16.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-core</artifactId>
			<version>2.0.2</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.4.2</version>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>0.9.1</version>
		</dependency>
	</dependencies>
</project>